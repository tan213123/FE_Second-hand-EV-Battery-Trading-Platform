import { useState, useEffect } from 'react'
import { useParams, useNavigate } from 'react-router-dom'
import './AuctionDetail.scss'

const AuctionDetailPage = () => {
  const { id } = useParams()
  const navigate = useNavigate()
  const [bidAmount, setBidAmount] = useState('')
  const [timeLeft, setTimeLeft] = useState({})

  // Mock data - thay b·∫±ng API call
  const auctionItem = {
    id: id,
    title: 'VinFast VF 8 Plus 2023 - Xe ƒëi·ªán cao c·∫•p',
    currentBid: 850000000,
    startingBid: 800000000,
    minIncrement: 10000000,
    totalBids: 24,
    endTime: new Date(Date.now() + 2 * 60 * 60 * 1000),
    images: ['/placeholder1.jpg', '/placeholder2.jpg', '/placeholder3.jpg'],
    specs: {
      year: 2023,
      km: '8,500 km',
      condition: 'Nh∆∞ m·ªõi',
      brand: 'VinFast',
      model: 'VF 8 Plus',
      transmission: 'T·ª± ƒë·ªông',
      color: 'ƒêen'
    },
    seller: 'Nguy·ªÖn VƒÉn A',
    location: 'H√† N·ªôi',
    description: 'Xe ƒë·∫πp, ch·∫°y √™m, pin t·ªët...',
    bidHistory: [
      { user: 'User123', amount: 850000000, time: '2 ph√∫t tr∆∞·ªõc' },
      { user: 'User456', amount: 840000000, time: '5 ph√∫t tr∆∞·ªõc' },
      { user: 'User789', amount: 830000000, time: '10 ph√∫t tr∆∞·ªõc' }
    ]
  }

  useEffect(() => {
    const timer = setInterval(() => {
      const diff = auctionItem.endTime - new Date()
      if (diff > 0) {
        const hours = Math.floor(diff / (1000 * 60 * 60))
        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))
        const seconds = Math.floor((diff % (1000 * 60)) / 1000)
        setTimeLeft({ hours, minutes, seconds })
      }
    }, 1000)

    return () => clearInterval(timer)
  }, [])

  const handlePlaceBid = () => {
    const amount = parseInt(bidAmount)
    if (amount < auctionItem.currentBid + auctionItem.minIncrement) {
      alert(`Gi√° ƒë·∫∑t ph·∫£i l·ªõn h∆°n ${(auctionItem.currentBid + auctionItem.minIncrement).toLocaleString('vi-VN')} ƒë`)
      return
    }
    console.log('Placing bid:', amount)
    alert('ƒê·∫∑t gi√° th√†nh c√¥ng!')
  }

  return (
    <div className="auction-detail-page">
      <div className="container">
        <button className="back-btn" onClick={() => navigate('/auction')}>
          ‚Üê Quay l·∫°i danh s√°ch ƒë·∫•u gi√°
        </button>

        <div className="auction-detail-grid">
          {/* Left: Images & Info */}
          <div className="auction-main">
            <div className="image-gallery">
              <div className="main-image">
                <img src="/api/placeholder/800/600" alt={auctionItem.title} />
                <div className="status-badge live">üî¥ ƒêang ƒë·∫•u gi√°</div>
              </div>
              <div className="thumbnail-list">
                {auctionItem.images.map((img, index) => (
                  <img key={index} src="/api/placeholder/150/100" alt={`Thumb ${index}`} />
                ))}
              </div>
            </div>

            <div className="auction-info-card">
              <h1>{auctionItem.title}</h1>
              
              <div className="specs-grid">
                <div className="spec-item">
                  <span className="label">H√£ng:</span>
                  <span className="value">{auctionItem.specs.brand}</span>
                </div>
                <div className="spec-item">
                  <span className="label">D√≤ng xe:</span>
                  <span className="value">{auctionItem.specs.model}</span>
                </div>
                <div className="spec-item">
                  <span className="label">NƒÉm:</span>
                  <span className="value">{auctionItem.specs.year}</span>
                </div>
                <div className="spec-item">
                  <span className="label">Km:</span>
                  <span className="value">{auctionItem.specs.km}</span>
                </div>
                <div className="spec-item">
                  <span className="label">H·ªôp s·ªë:</span>
                  <span className="value">{auctionItem.specs.transmission}</span>
                </div>
                <div className="spec-item">
                  <span className="label">M√†u:</span>
                  <span className="value">{auctionItem.specs.color}</span>
                </div>
              </div>

              <div className="seller-info">
                <h3>Th√¥ng tin ng∆∞·ªùi b√°n</h3>
                <p>üë§ {auctionItem.seller}</p>
                <p>üìç {auctionItem.location}</p>
              </div>

              <div className="description">
                <h3>M√¥ t·∫£</h3>
                <p>{auctionItem.description}</p>
              </div>
            </div>
          </div>

          {/* Right: Bidding Panel */}
          <div className="bidding-panel">
            <div className="bid-card">
              <div className="current-bid-section">
                <div className="label">Gi√° hi·ªán t·∫°i</div>
                <div className="amount">{auctionItem.currentBid.toLocaleString('vi-VN')} ƒë</div>
                <div className="bid-count">{auctionItem.totalBids} l∆∞·ª£t ƒë·∫•u gi√°</div>
              </div>

              <div className="time-left-section">
                <div className="label">‚è± K·∫øt th√∫c sau:</div>
                <div className="countdown">
                  <div className="time-unit">
                    <strong>{timeLeft.hours || 0}</strong>
                    <small>gi·ªù</small>
                  </div>
                  <span>:</span>
                  <div className="time-unit">
                    <strong>{timeLeft.minutes || 0}</strong>
                    <small>ph√∫t</small>
                  </div>
                  <span>:</span>
                  <div className="time-unit">
                    <strong>{timeLeft.seconds || 0}</strong>
                    <small>gi√¢y</small>
                  </div>
                </div>
              </div>

              <div className="bid-input-section">
                <label>Nh·∫≠p gi√° ƒë·∫∑t c·ªßa b·∫°n</label>
                <input
                  type="text"
                  placeholder={`T·ªëi thi·ªÉu ${(auctionItem.currentBid + auctionItem.minIncrement).toLocaleString('vi-VN')} ƒë`}
                  value={bidAmount}
                  onChange={(e) => setBidAmount(e.target.value.replace(/\D/g, ''))}
                />
                <small>B∆∞·ªõc gi√° t·ªëi thi·ªÉu: {auctionItem.minIncrement.toLocaleString('vi-VN')} ƒë</small>
              </div>

              <button className="place-bid-btn" onClick={handlePlaceBid}>
                ƒê·∫∑t gi√° ngay
              </button>

              <div className="quick-bid-buttons">
                <button onClick={() => setBidAmount((auctionItem.currentBid + auctionItem.minIncrement).toString())}>
                  +{auctionItem.minIncrement.toLocaleString('vi-VN')}
                </button>
                <button onClick={() => setBidAmount((auctionItem.currentBid + auctionItem.minIncrement * 2).toString())}>
                  +{(auctionItem.minIncrement * 2).toLocaleString('vi-VN')}
                </button>
                <button onClick={() => setBidAmount((auctionItem.currentBid + auctionItem.minIncrement * 5).toString())}>
                  +{(auctionItem.minIncrement * 5).toLocaleString('vi-VN')}
                </button>
              </div>
            </div>

            <div className="bid-history-card">
              <h3>L·ªãch s·ª≠ ƒë·∫•u gi√°</h3>
              <div className="bid-list">
                {auctionItem.bidHistory.map((bid, index) => (
                  <div key={index} className="bid-item">
                    <div className="bid-user">{bid.user}</div>
                    <div className="bid-amount">{bid.amount.toLocaleString('vi-VN')} ƒë</div>
                    <div className="bid-time">{bid.time}</div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default AuctionDetailPage
